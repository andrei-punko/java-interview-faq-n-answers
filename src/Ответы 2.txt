
1. Зачем нужен Docker?
контейнер позволяет создать изолированное окружение, в котором протестировать приложение
также позволяет развернуть необходимую инфраструктуру, например БД, брокеры сообщений и т.д.
по сравнению с виртуалкой - требует намного меньше ресурсов

2. Со временем запрос стал выполняться дольше. Какие есть способы ускорения?
Посмотреть, какие изменения были сделаны недавно, если деградация произошла не так давно. Возможны виноваты свежие изменения.
Посмотреть план запроса, убедиться, что используются те индексы, на которые рассчитываем. Либо добавить индексы, если их нет.
Также проблема может быть в данных: их стало столько, что индекс перестал использоваться. Также убедиться в этом при помощи плана запроса.

3. Зачем нужны индексы?
для ускорения поиска

4. Почему бы не сделать индексы на все поля сразу?
индекс надо в том числе обновлять. в какой-то момент затраты на это могут стать критичными и замедлять выполнение запросов

5. Как работает индекс?
было уже

6. Что такое ACID?
было уже

7. Расскажи про Kafka? Из чего состоит Kafka?
?

8. Во сколько раз увеличится скорость обработки если в одном топике есть 5 партиций и будет 10 consumerов?
?

9. Команда Linux для просмотра java процессов
ps aux | grep java

10. Слышал ли про Ansible? Зачем он нужен?
было уже

11. Какие java коллекции знаешь? Какие использовал? 
?

12. Как изнутри работает Hashmap?
См. "Ответы 3 - Вопрос 4"

13. Разница между checked и unchecked exceptions
было уже

14. Можно ли обработать RuntimeException? Обрабатывал ли?
Да. Это unchecked exception, и его отличие от checked лишь в том, что не надо отражать возможность его бросания в сигнатуре метода

15. Использовал ли Lombok?
да

16. Для чего нужна аннотация @SneakyThrows в Lombok?
чтобы избегнуть указания checked exceptions в сигнатуре метода, и потом быть обязанным их обрабатывать

17. 2 вида операций Stream API
было уже

18. Что будет выведено в консоль?
```
public static Stream<String> bar(Stream<String> stream) {
    System.out.println("start bar");
    return stream.filter(el -> !el.equals("bar"))
            .peek(System.out::print);
}

public static void main(String[] args) {
    Stream<String> stream = Stream.of("foo", "bar", "foo", "bar");
    Stream<String> result = bar(stream);
}
```
Кажется, что будет выведено foofoo, но на стриме не вызвана терминальная операция, ничего не будет выведено.

19. Вернуть список пользователей, у которых какая-либо группа начинается на «А»:
```
@Data
class User {
    private int id;
    private String name;
    private List<Group> groups;
}

@Data
class Group {
    private int userId;
    private String name;
}

@Slf4j
public class Test {
    public List<User> foo(Stream<User> usersStream) {
        return result;
    }
}
```
?

20. Написать, как можно запустить код в отдельном потоке (несколько вариантов)
?

21. Написать ExecutorService. Какие есть преимущества у ExecutorService перед Thread?
?

22. Написать deadlock
?

23. Зачем нужно ключевое слово volatile?
Для многопоточной оптимизации переменная может быть скопирована, для реализации так называемого "кэша потока". Тогда разные потоки будут работать с разными ее копиями.
Использование volatile приводит к тому, что все потоки работают с одной и той же копией этой переменной.

24. Зачем нужен GC? Привести пример работы любого GC которого знаешь.
?

25. Отличие Spring от Spring Boot?
было уже

26. Как устроен Spring Boot starter?
было уже

27. Расскажи про жизненный цикл bean?
!!!

28. Как донастроить bean? (вопрос про BeanPostProcessor)
Написать свой BeanPostProcessor, там добавить нужную логику донастройки бина

29. Какие есть способы внедрения зависимостей? Какие использовал?
было уже

30. Преимущества инъекции зависимости в конструктор?
Это позволяет обнаруживать ошибки на ранней стадии: при отсутствии нужного бина в контексте, - все упадет на этапе старта приложения, а не позже, когда этот бин понадобится

31. Какие есть 3 способа заинжектить несколько имплементаций одного интерфейса?
ответ: @Qualifier, @Primary, по имени

32. Будет ли это нормально работать? Нужно чтобы вся коллекция элементов нормально обработалась, либо ни один элемент нормально не обработался:
@Transactional
public void processCollection(Collection<Object> objects) {
    objects.parallelStream()
            .forEach(this::processOne);
}

@Transactional
public void processOne(Object o) {
    ...
}

33. Как сделать REST-запрос? Какие способы знаешь сделать это?
= При помощи RestTemplate: или вызовом соответствующего метода (get/post и т.п.) либо вызовом метода exchange с указанием, какой HTTP-метод использовать
= При помощи библиотеки OkHttp
= При помощи библиотеки OpenFeign
